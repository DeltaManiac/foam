{"componentChunkName":"component---node-modules-gatsby-theme-garden-src-templates-local-file-js","path":"/little man computer","result":{"data":{"file":{"childMdx":{"body":"function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsx mdx */\nvar _frontmatter = {};\n\nvar makeShortcode = function makeShortcode(name) {\n  return function MDXDefaultShortcode(props) {\n    console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\");\n    return mdx(\"div\", props);\n  };\n};\n\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, [\"components\"]);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"h1\", {\n    \"id\": \"little-man-computer\",\n    \"style\": {\n      \"position\": \"relative\"\n    }\n  }, \"Little Man Computer\"), mdx(\"p\", null, \"Von Neumann architecture based computer\"), mdx(\"p\", null, \"Inside the CPU there are:\"), mdx(\"ul\", null, mdx(\"li\", {\n    \"parentName\": \"ul\"\n  }, \"100 Memory locations (numbered 0 to 99).\"), mdx(\"li\", {\n    \"parentName\": \"ul\"\n  }, \"An Arithmetic Unit to do calculations.\"), mdx(\"li\", {\n    \"parentName\": \"ul\"\n  }, \"An Accumulator to store the result of the last operation or calculation.\"), mdx(\"li\", {\n    \"parentName\": \"ul\"\n  }, \"A Program Counter to store the address (in memory) of the next instruction to do.\"), mdx(\"li\", {\n    \"parentName\": \"ul\"\n  }, \"An Instruction Register to hold the top digit of the instruction read from memory.\"), mdx(\"li\", {\n    \"parentName\": \"ul\"\n  }, \"An Address Register to hold the bottom two digits of the instruction read from memory.\"), mdx(\"li\", {\n    \"parentName\": \"ul\"\n  }, \"An Input tray into which a number can be typed when needed.\"), mdx(\"li\", {\n    \"parentName\": \"ul\"\n  }, \"An Output area where any numbers output are printed.\")));\n}\n;\nMDXContent.isMDXComponent = true;","outboundReferences":[],"inboundReferences":[]},"fields":{"slug":"/little man computer","title":"Little Man Computer"}}},"pageContext":{"id":"6f907584-a179-566d-8252-cba4928385be"}},"staticQueryHashes":["2098632890","426988268"]}