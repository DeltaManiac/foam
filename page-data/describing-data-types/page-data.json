{"componentChunkName":"component---node-modules-gatsby-theme-garden-src-templates-local-file-js","path":"/describing-data-types","result":{"data":{"file":{"childMdx":{"body":"function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsx mdx */\nvar _frontmatter = {};\n\nvar makeShortcode = function makeShortcode(name) {\n  return function MDXDefaultShortcode(props) {\n    console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\");\n    return mdx(\"div\", props);\n  };\n};\n\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, [\"components\"]);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"h1\", {\n    \"id\": \"describing-data-and-types\",\n    \"style\": {\n      \"position\": \"relative\"\n    }\n  }, \"Describing Data and Types\"), mdx(\"h2\", {\n    \"id\": \"base-types\",\n    \"style\": {\n      \"position\": \"relative\"\n    }\n  }, \"Base Types\"), mdx(\"ul\", null, mdx(\"li\", {\n    \"parentName\": \"ul\"\n  }, mdx(\"p\", {\n    \"parentName\": \"li\"\n  }, \"Primary Types are built directly on the hardware --> base types\")), mdx(\"li\", {\n    \"parentName\": \"ul\"\n  }, mdx(\"p\", {\n    \"parentName\": \"li\"\n  }, \"low level mapping between simple data types and hardware implementation\")), mdx(\"li\", {\n    \"parentName\": \"ul\"\n  }, mdx(\"p\", {\n    \"parentName\": \"li\"\n  }, \"Diff implementation for diff hardware\"), mdx(\"p\", {\n    \"parentName\": \"li\"\n  }), mdx(\"p\", {\n    \"parentName\": \"li\"\n  })), mdx(\"li\", {\n    \"parentName\": \"ul\"\n  }, mdx(\"p\", {\n    \"parentName\": \"li\"\n  }, mdx(\"inlineCode\", {\n    \"parentName\": \"p\"\n  }, \"DW_TAG\"), \" -> Tags\")), mdx(\"li\", {\n    \"parentName\": \"ul\"\n  }, mdx(\"p\", {\n    \"parentName\": \"li\"\n  }, mdx(\"inlineCode\", {\n    \"parentName\": \"p\"\n  }, \"DW_AT\"), \" -> Attributes\")), mdx(\"li\", {\n    \"parentName\": \"ul\"\n  }, mdx(\"p\", {\n    \"parentName\": \"li\"\n  }, \"Eg : [\", mdx(\"a\", {\n    \"href\": \"die\",\n    \"title\": \"Die\",\n    \"parentName\": \"p\"\n  }, \"die\"), \"] of 16 bit integer stored in the upper 16 bits of a 4byte word\"), mdx(\"p\", {\n    \"parentName\": \"li\"\n  }), mdx(\"ul\", {\n    \"parentName\": \"li\"\n  }, mdx(\"li\", {\n    \"parentName\": \"ul\"\n  }, mdx(\"inlineCode\", {\n    \"parentName\": \"li\"\n  }, \"DW_AT_bit_size\"), \" -> value is 16bit wide\"), mdx(\"li\", {\n    \"parentName\": \"ul\"\n  }, mdx(\"inlineCode\", {\n    \"parentName\": \"li\"\n  }, \"DW_AT_bit_offset\"), \" -> offset from the higher order bit\")))));\n}\n;\nMDXContent.isMDXComponent = true;","outboundReferences":[{"__typename":"Mdx","body":"function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsx mdx */\nvar _frontmatter = {};\n\nvar makeShortcode = function makeShortcode(name) {\n  return function MDXDefaultShortcode(props) {\n    console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\");\n    return mdx(\"div\", props);\n  };\n};\n\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, [\"components\"]);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"h1\", {\n    \"id\": \"die\",\n    \"style\": {\n      \"position\": \"relative\"\n    }\n  }, \"Die\"), mdx(\"ul\", null, mdx(\"li\", {\n    \"parentName\": \"ul\"\n  }, mdx(\"strong\", {\n    \"parentName\": \"li\"\n  }, \"D\"), \"ebugging \", mdx(\"strong\", {\n    \"parentName\": \"li\"\n  }, \"I\"), \"nformation \", mdx(\"strong\", {\n    \"parentName\": \"li\"\n  }, \"E\"), \"ntry\"), mdx(\"li\", {\n    \"parentName\": \"ul\"\n  }, \"Building Blocks of [\", mdx(\"a\", {\n    \"href\": \"dwarf\",\n    \"title\": \"Dwarf Debugging Format\",\n    \"parentName\": \"li\"\n  }, \"dwarf\"), \"]\"), mdx(\"li\", {\n    \"parentName\": \"ul\"\n  }, \"consists of \", mdx(\"inlineCode\", {\n    \"parentName\": \"li\"\n  }, \"tags\"), \" and \", mdx(\"inlineCode\", {\n    \"parentName\": \"li\"\n  }, \"attributes\"), \" which describe the entity\"), mdx(\"li\", {\n    \"parentName\": \"ul\"\n  }, \"Tree like structure\"), mdx(\"li\", {\n    \"parentName\": \"ul\"\n  }, mdx(\"inlineCode\", {\n    \"parentName\": \"li\"\n  }, \"attributes\"), \" can be\", mdx(\"ul\", {\n    \"parentName\": \"li\"\n  }, mdx(\"li\", {\n    \"parentName\": \"ul\"\n  }, \"constants(fn names)\"), mdx(\"li\", {\n    \"parentName\": \"ul\"\n  }, \"variable (start addr for fn)\"), mdx(\"li\", {\n    \"parentName\": \"ul\"\n  }, \"reference to other Die\"), mdx(\"li\", {\n    \"parentName\": \"ul\"\n  }, \"...\"))), mdx(\"li\", {\n    \"parentName\": \"ul\"\n  }, \"Graphical representaion of a DIE\\n\", mdx(\"ul\", {\n    \"parentName\": \"li\"\n  }, mdx(\"li\", {\n    \"parentName\": \"ul\"\n  }, \"Topmost => compilation unit\", mdx(\"ul\", {\n    \"parentName\": \"li\"\n  }, mdx(\"li\", {\n    \"parentName\": \"ul\"\n  }, mdx(\"inlineCode\", {\n    \"parentName\": \"li\"\n  }, \"main\"), \" => child of topmost\"), mdx(\"li\", {\n    \"parentName\": \"ul\"\n  }, mdx(\"inlineCode\", {\n    \"parentName\": \"li\"\n  }, \"int\"), \" value returned by main :\", mdx(\"ul\", {\n    \"parentName\": \"li\"\n  }, mdx(\"li\", {\n    \"parentName\": \"ul\"\n  }, \"referenced by \", mdx(\"inlineCode\", {\n    \"parentName\": \"li\"\n  }, \"main\"))))))))), mdx(\"h2\", {\n    \"id\": \"die-in-detail\",\n    \"style\": {\n      \"position\": \"relative\"\n    }\n  }, \"Die in Detail\"), mdx(\"ol\", null, mdx(\"li\", {\n    \"parentName\": \"ol\"\n  }, \"[\", mdx(\"a\", {\n    \"href\": \"describing-data-types\",\n    \"title\": \"Describing Data and Types\",\n    \"parentName\": \"li\"\n  }, \"describing-data-types\"), \"]\"), mdx(\"li\", {\n    \"parentName\": \"ol\"\n  }, \"\", mdx(\"a\", {\n    \"href\": \"/Describing-Executable-Code\",\n    \"title\": \"Describing Executable Code\",\n    \"parentName\": \"li\"\n  }, \"[[Describing Executable Code]]\"), \"\")));\n}\n;\nMDXContent.isMDXComponent = true;","parent":{"__typename":"File","id":"7e066ac9-f82c-52cd-9f5a-bc3f8e5524ae","fields":{"slug":"/die","title":"Die"}}}],"inboundReferences":[{"__typename":"Mdx","body":"function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsx mdx */\nvar _frontmatter = {};\n\nvar makeShortcode = function makeShortcode(name) {\n  return function MDXDefaultShortcode(props) {\n    console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\");\n    return mdx(\"div\", props);\n  };\n};\n\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, [\"components\"]);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"h1\", {\n    \"id\": \"die\",\n    \"style\": {\n      \"position\": \"relative\"\n    }\n  }, \"Die\"), mdx(\"ul\", null, mdx(\"li\", {\n    \"parentName\": \"ul\"\n  }, mdx(\"strong\", {\n    \"parentName\": \"li\"\n  }, \"D\"), \"ebugging \", mdx(\"strong\", {\n    \"parentName\": \"li\"\n  }, \"I\"), \"nformation \", mdx(\"strong\", {\n    \"parentName\": \"li\"\n  }, \"E\"), \"ntry\"), mdx(\"li\", {\n    \"parentName\": \"ul\"\n  }, \"Building Blocks of [\", mdx(\"a\", {\n    \"href\": \"dwarf\",\n    \"title\": \"Dwarf Debugging Format\",\n    \"parentName\": \"li\"\n  }, \"dwarf\"), \"]\"), mdx(\"li\", {\n    \"parentName\": \"ul\"\n  }, \"consists of \", mdx(\"inlineCode\", {\n    \"parentName\": \"li\"\n  }, \"tags\"), \" and \", mdx(\"inlineCode\", {\n    \"parentName\": \"li\"\n  }, \"attributes\"), \" which describe the entity\"), mdx(\"li\", {\n    \"parentName\": \"ul\"\n  }, \"Tree like structure\"), mdx(\"li\", {\n    \"parentName\": \"ul\"\n  }, mdx(\"inlineCode\", {\n    \"parentName\": \"li\"\n  }, \"attributes\"), \" can be\", mdx(\"ul\", {\n    \"parentName\": \"li\"\n  }, mdx(\"li\", {\n    \"parentName\": \"ul\"\n  }, \"constants(fn names)\"), mdx(\"li\", {\n    \"parentName\": \"ul\"\n  }, \"variable (start addr for fn)\"), mdx(\"li\", {\n    \"parentName\": \"ul\"\n  }, \"reference to other Die\"), mdx(\"li\", {\n    \"parentName\": \"ul\"\n  }, \"...\"))), mdx(\"li\", {\n    \"parentName\": \"ul\"\n  }, \"Graphical representaion of a DIE\\n\", mdx(\"ul\", {\n    \"parentName\": \"li\"\n  }, mdx(\"li\", {\n    \"parentName\": \"ul\"\n  }, \"Topmost => compilation unit\", mdx(\"ul\", {\n    \"parentName\": \"li\"\n  }, mdx(\"li\", {\n    \"parentName\": \"ul\"\n  }, mdx(\"inlineCode\", {\n    \"parentName\": \"li\"\n  }, \"main\"), \" => child of topmost\"), mdx(\"li\", {\n    \"parentName\": \"ul\"\n  }, mdx(\"inlineCode\", {\n    \"parentName\": \"li\"\n  }, \"int\"), \" value returned by main :\", mdx(\"ul\", {\n    \"parentName\": \"li\"\n  }, mdx(\"li\", {\n    \"parentName\": \"ul\"\n  }, \"referenced by \", mdx(\"inlineCode\", {\n    \"parentName\": \"li\"\n  }, \"main\"))))))))), mdx(\"h2\", {\n    \"id\": \"die-in-detail\",\n    \"style\": {\n      \"position\": \"relative\"\n    }\n  }, \"Die in Detail\"), mdx(\"ol\", null, mdx(\"li\", {\n    \"parentName\": \"ol\"\n  }, \"[\", mdx(\"a\", {\n    \"href\": \"describing-data-types\",\n    \"title\": \"Describing Data and Types\",\n    \"parentName\": \"li\"\n  }, \"describing-data-types\"), \"]\"), mdx(\"li\", {\n    \"parentName\": \"ol\"\n  }, \"\", mdx(\"a\", {\n    \"href\": \"/Describing-Executable-Code\",\n    \"title\": \"Describing Executable Code\",\n    \"parentName\": \"li\"\n  }, \"[[Describing Executable Code]]\"), \"\")));\n}\n;\nMDXContent.isMDXComponent = true;","parent":{"__typename":"File","id":"7e066ac9-f82c-52cd-9f5a-bc3f8e5524ae","fields":{"slug":"/die","title":"Die"}}}]},"fields":{"slug":"/describing-data-types","title":"Describing Data and Types"}}},"pageContext":{"id":"d9a6b66d-8164-5cd4-8e11-050eb1d6170d"}},"staticQueryHashes":["2098632890","426988268"]}